apiVersion: v1
kind: ServiceAccount
metadata:
  name: spire-server
  namespace: spire-server


---

apiVersion: v1
kind: Secret
metadata:
  name: spire-server-sa-token
  namespace: spire-server
  annotations:
    kubernetes.io/service-account.name: spire-server
type: kubernetes.io/service-account-token


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spire-server-trust-role
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["configmaps", "pods", "nodes"]
  verbs: ["patch", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spire-server-trust-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spire-server-trust-role
subjects:
- kind: ServiceAccount
  name:  spire-server
  namespace: spire-server

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-bundle
  namespace: spire-server

  # ClusterRole to allow spire-server node attestor to query Token Review API
# and to be able to push certificate bundles to a configmap
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: spire-server-trust-role
# rules:
# - apiGroups: ["authentication.k8s.io"]
#   resources: ["tokenreviews"]
#   verbs: ["create"]
# - apiGroups: [""]
#   resources: ["configmaps", "pods", "nodes"]
#   verbs: ["patch", "get", "list"]

# ---
# # Binds above cluster role to spire-server service account
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: spire-server-trust-role-binding
# subjects:
# - kind: ServiceAccount
#   name: spire-server
#   namespace: spire
# roleRef:
#   kind: ClusterRole
#   name: spire-server-trust-role
#   apiGroup: rbac.authorization.k8s.io



## spire-server helm
#  k describe role -n spire-server spire-bundle 
# Name:         spire-bundle
# Labels:       app.kubernetes.io/managed-by=Helm
# Annotations:  meta.helm.sh/release-name: spire
#               meta.helm.sh/release-namespace: spire-server
# PolicyRule:
#   Resources   Non-Resource URLs  Resource Names  Verbs
#   ---------   -----------------  --------------  -----
#   configmaps  []                 [spire-bundle]  [get patch]