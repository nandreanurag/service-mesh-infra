server {
  bind_address = "0.0.0.0"
  bind_port = "8081"
  # socket_path = "/run/spire/sockets/server.sock"  # Uncomment if using Unix socket
  trust_domain = "example.org"
  data_dir = "/opt/spire/data"
  log_level = "DEBUG"
  ca_key_type = "rsa-2048"

#   default_svid_ttl = "10m"
  ca_ttl = "1h"
  default_x509_svid_ttl="4h"

  ca_subject = {
    country = ["US"]
    organization = ["SPIFFE"]
    common_name = ""  # Ensure no trailing comma
  }
}

plugins {
  DataStore "sql" {
    plugin_data {
      database_type = "sqlite3"
      connection_string = "/opt/spire/data/server/datastore.sqlite3"
    }
  }

  # NodeAttestor "k8s_psat" is used for Kubernetes workloads

      NodeAttestor "k8s_psat" {
        plugin_data {
            clusters = {
                "eks-ec2-mtls-with-spire-istio" = {
                    service_account_allow_list = ["spire-server:spire-agent"]             
      kube_config_file = "/opt/spire/conf/kubeconfig/kubeconfig-spire"  # Update with actual kubeconfig path
                }
        }
    }
    }
     NodeAttestor "aws_iid" {
        plugin_data {
            region = "us-east-1"
             #assume_role = "spire-server-delegate"
        }
    }

  # KeyManager "disk" is useful for managing private keys on disk
  KeyManager "disk" {
    plugin_data {
      keys_path = "/opt/spire/data/server/keys.json"
    }
  }

  Notifier "k8sbundle" {
    plugin_data {
      config_map = "spire-bundle"
      namespace = "spire-server"
      kube_config_file_path = "/opt/spire/conf/kubeconfig/kubeconfig-spire"  # Update with actual kubeconfig path
    }
  }
}

health_checks {
  listener_enabled = true
  bind_address = "0.0.0.0"
  bind_port = "8081"
  live_path = "/live"
  ready_path = "/ready"
}